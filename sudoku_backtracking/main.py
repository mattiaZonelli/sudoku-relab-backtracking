from pprint import pprint
from sudoku import solve_sudoku, init_domain_matrix, reduce_domain, propagate_reduction
import time

# Press the green button in the gutter to run the script.
if __name__ == '__main__':
    board_n = [
        [9, 0, 4, 0, 5, 0, 0, 2, 0],
        [0, 0, 7, 0, 0, 0, 0, 1, 0],
        [0, 0, 3, 2, 8, 0, 0, 0, 0],

        [0, 0, 0, 0, 9, 0, 0, 0, 0],
        [0, 0, 0, 8, 0, 0, 0, 3, 6],
        [5, 0, 0, 7, 0, 0, 0, 0, 2],

        [1, 0, 0, 0, 0, 3, 0, 4, 0],
        [0, 0, 0, 0, 0, 6, 0, 0, 5],
        [0, 4, 0, 0, 0, 0, 0, 0, 9]
    ]

    example_board = [

        [7, 0, 0, 0, 0, 9, 0, 0, 6],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [5, 0, 8, 4, 1, 0, 0, 2, 0],

        [0, 0, 1, 0, 6, 0, 0, 0, 0],
        [0, 5, 2, 0, 0, 0, 7, 8, 0],
        [0, 0, 0, 0, 5, 0, 3, 0, 0],

        [0, 9, 0, 0, 7, 2, 8, 0, 4],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [3, 0, 0, 8, 0, 0, 0, 0, 5]

    ]

    board_p = [
        [3, 7, 0, 5, 0, 0, 0, 0, 6],
        [0, 0, 0, 3, 6, 0, 0, 1, 2],
        [0, 0, 0, 0, 9, 1, 7, 5, 0],

        [0, 0, 0, 1, 5, 4, 0, 7, 0],
        [0, 0, 3, 0, 7, 0, 6, 0, 0],
        [0, 5, 0, 6, 3, 8, 0, 0, 0],

        [0, 6, 4, 9, 8, 0, 0, 0, 0],
        [5, 9, 0, 0, 2, 6, 0, 0, 0],
        [2, 0, 0, 0, 0, 5, 0, 6, 4]
    ]

    board1 = [
        [0, 4, 0, 0, 0, 0, 1, 7, 9],
        [0, 0, 2, 0, 0, 8, 0, 5, 4],
        [0, 0, 6, 0, 0, 5, 0, 0, 8],
        [0, 8, 0, 0, 7, 0, 9, 1, 0],
        [0, 5, 0, 0, 9, 0, 0, 3, 0],
        [0, 1, 9, 0, 6, 0, 0, 4, 0],
        [3, 0, 0, 4, 0, 0, 7, 0, 0],
        [5, 7, 0, 1, 0, 0, 2, 0, 0],
        [9, 2, 8, 0, 0, 0, 0, 6, 0],
    ]

    board2 = [
        [2, 0, 6, 0, 0, 0, 0, 4, 9],
        [0, 3, 7, 0, 0, 9, 0, 0, 0],
        [1, 0, 0, 7, 0, 0, 0, 0, 6],
        [0, 0, 0, 5, 8, 0, 9, 0, 0],
        [7, 0, 5, 0, 0, 0, 8, 0, 4],
        [0, 0, 9, 0, 6, 2, 0, 0, 0],
        [9, 0, 0, 0, 0, 4, 0, 0, 1],
        [0, 0, 0, 3, 0, 0, 4, 9, 0],
        [4, 1, 0, 0, 0, 0, 2, 0, 8],
    ]

    to_solve = board_p
    start = time.time()
    for t in range(100):
        solve_sudoku(to_solve)

    print("Time", time.time() - start, "sec")

    pprint(to_solve)

# See PyCharm help at https://www.jetbrains.com/help/pycharm/
